/*
 * Copyright (c) 2019 Uber Technologies, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.uber.model.core.generated.example;

import androidx.annotation.Nullable;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonToken;
import com.uber.model.core.adapter.gson.GsonSerializable;
import com.uber.model.core.adapter.gson.wrapper.TypeSafeBooleanTypeAdapter;
import java.io.IOException;
import javax.annotation.Generated;

@Generated(
  value = "GsonTypeProcessor",
  comments = "This code was generated by the Uber GsonTypeProcessor"
)
@GsonSerializable.ConstructorParameterCount(0)
final class TypedefC_GsonTypeAdapter extends TypeSafeBooleanTypeAdapter<TypedefC> {
  @Nullable
  @Override
  public TypedefC read(JsonReader in) throws IOException {
    if (in.peek() == JsonToken.NULL) {
      in.nextNull();
      return null;
    }
    return TypedefC.wrap(in.nextBoolean());
  }
}
