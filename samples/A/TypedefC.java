package com.uber.model.core.generated.example;

import androidx.annotation.Nullable;
import com.google.errorprone.annotations.Immutable;
import com.google.errorprone.annotations.concurrent.LazyInit;
import com.uber.errorprone.annotations.DoNotMock;
import com.uber.errorprone.annotations.DoNotSubclass;
import com.uber.model.core.adapter.gson.GsonSerializable;
import com.uber.model.core.annotation.ThriftElement;
import com.uber.model.core.annotation.TypeSafeWrapper;
import com.uber.model.core.wrapper.TypeSafeBoolean;
import javax.annotation.Generated;

@Generated(
  value = "com.uber.codegen.compiler.JavaThriftCodeGenCodeGenerator",
  comments = "This code was generated by the Uber ThriftCodeGen Compiler from: example.thrift"
)
@ThriftElement
@Immutable
@DoNotMock("Create a real instance via wrap().")
@DoNotSubclass("This should be treated as final, and is only non-final for legacy reasons")
@TypeSafeWrapper
@GsonSerializable(TypedefC_GsonTypeAdapter.class)
public class TypedefC implements TypeSafeBoolean {
  private final boolean value;

  @LazyInit private transient volatile int $hashCode;

  @LazyInit private transient volatile boolean $hashCodeMemoized;

  private TypedefC(boolean value) {
    this.value = value;
  }

  /** Creates a new instance from another wrapper's value. Useful for quick conversions. */
  public static TypedefC wrapFrom(TypeSafeBoolean other) {
    return wrap(other.get());
  }

  @Override
  public boolean get() {
    return value;
  }

  public static TypedefC wrap(boolean value) {
    return new TypedefC(value);
  }

  @Override
  public String toString() {
    return String.valueOf(get());
  }

  @Override
  public boolean equals(@Nullable Object o) {
    if (o == null) {
      return false;
    }
    if (o == this) {
      return true;
    }
    if (o instanceof TypedefC) {
      TypedefC that = (TypedefC) o;
      return this.value == that.value;
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int h = 1;
      h *= 1000003;
      h ^= Boolean.valueOf(value).hashCode();
      $hashCode = h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }
}
