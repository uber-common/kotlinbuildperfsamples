package com.uber.model.core.generated.example;

import com.google.errorprone.annotations.Immutable;
import com.uber.errorprone.annotations.DoNotMock;
import com.uber.errorprone.annotations.DoNotSubclass;
import com.uber.model.core.adapter.gson.GsonSerializable;
import com.uber.model.core.annotation.ThriftElement;
import com.uber.model.core.annotation.TypeSafeWrapper;
import com.uber.model.core.wrapper.TypeSafeString;
import javax.annotation.Generated;

@Generated(
  value = "com.uber.codegen.compiler.JavaThriftCodeGenCodeGenerator",
  comments = "This code was generated by the Uber ThriftCodeGen Compiler from: example.thrift"
)
@ThriftElement
@Immutable
@DoNotMock("Create a real instance via wrap().")
@DoNotSubclass("This should be treated as final, and is only non-final for legacy reasons")
@TypeSafeWrapper
@GsonSerializable(TypedefA_GsonTypeAdapter.class)
public class TypedefA extends TypeSafeString {
  private TypedefA(String value) {
    super(value);
  }

  /** Creates a new instance from another wrapper's value. Useful for quick conversions. */
  public static TypedefA wrapFrom(TypeSafeString other) {
    return wrap(other.get());
  }

  public static TypedefA wrap(String value) {
    return new TypedefA(value);
  }
}
